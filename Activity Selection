Given N activities with their start and finish day given in array start[ ] and end[ ]. Select the maximum number of activities that can be performed by a single person, assuming that a person can only work on a single activity at a given day.
Note : Duration of the activity includes both starting and ending day.


Example 1:

Input:
N = 2
start[] = {2, 1}
end[] = {2, 2}
Output: 
1
Explanation:
A person can perform only one of the
given activities.


def maxActivities(N, start, end):
    if N <= 0:
        return 0

    # Combine start and end times into pairs
    activities = list(zip(start, end))

    # Sort activities by their end times
    activities.sort(key=lambda x: x[1])

    # Initialize the result and the end time of the last selected activity
    result = 1
    last_end_time = activities[0][1]

    # Iterate through the sorted activities and select non-overlapping ones
    for i in range(1, N):
        if activities[i][0] >= last_end_time:
            result += 1
            last_end_time = activities[i][1]

    return result

# Example usage
N = 2
start = [2, 1]
end = [2, 2]
result = maxActivities(N, start, end)
print(result)
